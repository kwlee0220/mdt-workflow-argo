plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'etri'
version = System.getenv("MDT_BUILD_VERSION") ?: "unknown"

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
		exclude group: 'commons-logging', module: 'commons-logging'
	}
}

repositories {
	mavenCentral()
	maven {
		url "https://maven.aksw.org/repository/internal/"
		allowInsecureProtocol = true
	}
}
dependencies {
	implementation project(":utils")
	implementation project(":mdt-client")
	// implementation project(":argo-java-client")
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'io.gsonfire:gson-fire:1.9.0'
	implementation fileTree(dir: 'lib', include: ['*.jar'])
	
	// Checker framework
	implementation("org.checkerframework:checker:${checker_version}")
	
	// HTTP Client
	implementation "com.squareup.okhttp3:okhttp:${okhttp_version}"

    // SpringBoot dependencies
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation "org.springframework.boot:spring-boot-configuration-processor:${spring_boot_version}"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdoc_version}"
}

test {
	useJUnitPlatform()
}

bootJar {
	archiveClassifier = 'all'
	mainClass = 'mdt.workflow.MDTArgoWorkflowManagerApplication'
}